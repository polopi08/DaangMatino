import { URL } from 'url'
import Dispatcher from './dispatcher'
import buildConnector from './connector'

type ClientConnectOptions = Omit<Dispatcher.ConnectOptions, 'origin'>

/**
 * A basic HTTP/1.1 client, mapped on top a single TCP/TLS connection. Pipelining is disabled by default.
 */
export class Client extends Dispatcher {
  constructor (url: string | URL, options?: Client.Options)
  
  pipelining: number
  
  closed: boolean
  
  destroyed: boolean

  
  override connect (
    options: ClientConnectOptions
  ): Promise<Dispatcher.ConnectData>
  override connect (
    options: ClientConnectOptions,
    callback: (err: Error | null, data: Dispatcher.ConnectData) => void
  ): void
}

export declare namespace Client {
  export interface OptionsInterceptors {
    Client: readonly Dispatcher.DispatchInterceptor[];
  }
  export interface Options {
    
    interceptors?: OptionsInterceptors;
    
    maxHeaderSize?: number;
    
    headersTimeout?: number;
    
    socketTimeout?: never;
    
    requestTimeout?: never;
    
    connectTimeout?: number;
    
    bodyTimeout?: number;
    
    idleTimeout?: never;
    
    keepAlive?: never;
    
    keepAliveTimeout?: number;
    
    maxKeepAliveTimeout?: never;
    
    keepAliveMaxTimeout?: number;
    
    keepAliveTimeoutThreshold?: number;
    
    socketPath?: string;
    
    pipelining?: number;
    
    tls?: never;
    
    strictContentLength?: boolean;
    
    maxCachedSessions?: number;
    
    maxRedirections?: number;
    
    connect?: Partial<buildConnector.BuildOptions> | buildConnector.connector;
    
    maxRequestsPerClient?: number;
    
    localAddress?: string;
    
    maxResponseSize?: number;
    
    autoSelectFamily?: boolean;
    
    autoSelectFamilyAttemptTimeout?: number;
    /**
     * @description Enables support for H2 if the server has assigned bigger priority to it through ALPN negotiation.
     * @default false
    */
    allowH2?: boolean;
    /**
     * @description Dictates the maximum number of concurrent streams for a single H2 session. It can be overridden by a SETTINGS remote frame.
     * @default 100
    */
    maxConcurrentStreams?: number
  }
  export interface SocketInfo {
    localAddress?: string
    localPort?: number
    remoteAddress?: string
    remotePort?: number
    remoteFamily?: string
    timeout?: number
    bytesWritten?: number
    bytesRead?: number
  }
}

export default Client
